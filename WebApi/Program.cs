using Application;
using Core.CrossCuttingConcerns.Exceptions.Extensions;
using Persistence;

var builder = WebApplication.CreateBuilder(args);

// Add services to the container.

builder.Services.AddControllers();
builder.Services.AddApplicationServices(); //Application katmanýnýn IOC süreçleri burada iþlenmekte.
builder.Services.AddPersistenceServices(builder.Configuration); //Persistence katmanýnýn IOC süreçleri burada iþlenmekte.
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

var app = builder.Build();

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

if (app.Environment.IsProduction()) //bu middleware'in yalnýzca production'da çalýþmasýný istediðimiz için if içerisine ekledik. Çünkü development ortamýnda hatanýn detaylarýný görmek istiyoruz
    app.ConfigureCustomExceptionMiddleware(); //exception middleware'i sisteme dahil ediyoruz, validation da bu middleware üzerinden çalýþmakta

app.UseHttpsRedirection();

app.UseAuthorization();

app.MapControllers();

app.Run();
